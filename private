#!/bin/sh

upstream=`git for-each-ref --format='%(upstream)' refs/heads/private`
upstream=${upstream:-origin}

cont=
force=
noautorerere=
careful=0
test_script=
options=
while test $# -gt 0; do
case "$1" in
--continue)
	cont=t
	;;
--noautorerere)
	noautorerere=t
	merge_config="-c rerere.autoupdate=false"
	options="$options $1"
	;;
-f)
	force=t
	;;
-c|--careful)
	careful=$(($careful + 1))
	options="$options $1"
	;;
-t)
	shift
	test_script="$1"
	options="$options -t $1"
	;;
*)
	echo >&2 "unknown option: $1"
	exit 1
esac
shift
done

GIT_DIR=`git rev-parse --git-dir` || exit

if test "$cont" = t; then
	if git symbolic-ref -q HEAD >/dev/null; then
		echo >&2 "fatal: refusing to continue private build from branch"
		exit 1
	fi
	if test -f "$GIT_DIR/MERGE_HEAD"; then
		GIT_EDITOR=true git commit || exit
	fi
else
	test -z "$force" &&
	test -n "`git rev-list -1 --no-merges --first-parent \
		 $upstream..private`" &&
	  {
		  git log --no-merges --first-parent $upstream..private
		  exit 1
	  }
	git checkout -q ${force:+-f} $upstream^0 || exit
	echo "Meta/private --continue $options" >"$GIT_DIR/continue"
fi

for i in `Meta/topics`; do
	case "$i" in
	*-wip|*-stale)
		echo >&2 "Skipping $i (wip)..."
		continue
		;;
	esac

	if test -z "`git rev-list -1 ^HEAD $i`"; then
		echo >&2 "Skipping $i (already merged)..."
		continue
	fi

	echo >&2 Merging $i...
	if ! git rev-parse -q --verify "$i" >/dev/null; then
		i=`git for-each-ref --format='%(refname:short)' refs/remotes |
		   grep -m 1 "/$i\$"`
		echo >&2 Local branch not found, using $i...
	fi
	if ! git $merge_config merge --no-edit --no-ff $i; then
		if test -z "$noautorerere" && test -z "`git ls-files -u`"; then
			echo >&2 Auto-committing rerere merge...
			GIT_EDITOR=true git commit || exit 1
		else
			exit 1
		fi
	fi
	if test "$careful" -gt 0; then
		make -j16 || exit 1
		if test "$careful" -gt 1; then
			make test || exit 1
		fi
	elif test -n "$test_script" && test -e t/t${test_script}*.sh; then
		(make -j16 && cd t && make t${test_script}*.sh) || exit 1
	fi
done

git branch -f private &&
git checkout private || exit
rm -f "$GIT_DIR/continue"
echo All branches merged successfully.
exit 0
